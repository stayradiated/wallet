workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini

    environment:
      vars:
        FCI_CERTIFICATE: Encrypted(Z0FBQUFBQmdzdTJoeXlVLUh6dmpVUjZYTFVCM01XRk5OeDNtN2x3OEJoNW9aaGRkTlJhSDVGZ3B3OHlySVdBZlJscW02REd1Y2RseVdpMWppS0UyQWFTRktYd1ZLNGJDQmRDcExhcm9aYU8tSmsxb1A1N2NndGg5b1NYWUxFZTZTR0twWGk1c0E4X3ROY2xlYXF2MUIwSTZJVkFDRkgzYVNOQ0xHZ2lzbWkzQTJnQllDUExXSnZQQUc1b205dG9JUVYzRDhGaE5GZ3VvSl9hSF90YzhDSTh4QjdBTjc0cUJ1Q3laaWNyMzBrZ2NWUDdqQUpnaFhnNElmWGZ2Rjl0bXpBbjZGNmN3VC1yOEptVUdheHNCU2VxYy1tLVIxN1N1WEh0Y1ZUVE8xbDZ3Y2JYWXRZeFRGWDh5b0JqV0pNVGVTcjBMVGhLZU5OUldpUlM3a0R1d1hTb0RaOUhZVlNTaXNDcmFsZ1piVDlNNXVWYmsyYnFlWWRfQnF6eEQ0UjBJVW5CcmpBenNDcUNTN0ZlQUMyOUJSdzBLVm1YZVhkLVhaR2txTkdiS1NlYUgwVHplSDF1LWtRLVNZTUZNYUY5ZzNDcTR0emw1MXpzMkltNWY4dEw1UUd2YlE3OFJRTGJOczJxajBhNThHMlhzZm1veDd5MTk4ZGlvTHo3QnJWTFZ0THJ0NDBxNVdrLXFIZWlNbTFNSTFtNTNvU0FYeDhIN2N1VjQxeU55UnduWnZJa0hVb3VPY1ByRndwdndfZGs4bXNFb091N25oUTVuY1RMMk9WT0NsRmg3WHJQdUNKakdsQWpGcjVocV9DNFh2aDVYdjhvYzl3d090WWdFNEdCZWVXX2RUWGh4RW1ldmgzRjJ3Q1gteXpBRHA5aFNJdHgyWEQ1azdoM3pNNzdxS2w1THNnUUUzNVF5NXlURWtIN2k4UTFMQ1ZobkYtNWh5QnhRZGhjZGFaWkxXR01nQjJTSi02VkFLNTB1bmhKdGxuLUd5Tk9lcW1CSlk4bUZJY2Q5YjZPSjBKRkFaZVpmWTNpbV9XLU9kSXZ0OFFZVkVXQVFzZW1makFNUmVoVldCVWRTM1c4c1dGcmx6Y2l4M1dZTm9vMWk1WW5sNUVOMmw3cWpjOVNtSUxOcjZLT1lqbHVSRkwzX0JiaDlnZjZBdUkzaEJ1V0dwcDN4NHdibmVxSmFkc1FEWkJ5RndJbHBBcjZ6aUZ4TTFyUHJTVnV6aXFZdVppMTFWblBuS0ZreXB6M1dsaWxJbGJVRFQ0Nnlpc0ZFRFlkV3ZJeU5pWXRKRjhuTmtvb21LWEVOQ3F5bUplOUJTN0JXam05Sm9tMWxDdXlQdzZpbFF0c3A2Qm1vRklZd1hwOHpFdVluRFJjRHBkQkhJVlNaSWJwRl9WMHBfLVNTekJfQXZDOHNZQTMyWUR6YUx6SUZ6eExVdi1HUnpNX1l3TjFkdXJ3N0ZFd2dZSGVYNmtiRmk4SnBuYVRoa1Q4NDFCLUJKUzhjZ3FnSnBkbjlNLXZkcFdFdUFrUV9ic05FN3VaSmdjTWJXN3c5OXdCcnhQN0JqU1JZOEtDdm9RRnhXM0ZTbHZZMWRNeVgyVTlheWoxRG9aeEl6ODRtTFZ2UEFsTk52MC1NelJlTmdHaTN0TzVhb1EySUlRckV4MzZaZDlCMV9XSHJycklxWVdMYWNBUGdiLVlXM010NEZ3UzhBU3ZaZGRPM1RaTVdxOFBkVnNmZUlJT3lpVC1VYk9LZ0Q4bEJrLURQZU43bDFnbnlQaUJlWExzU2I5ZDRDRkdVdUNDNG9WeVlNVmhnajJoZlJ4Z1cwelZydlAzYndYeEcyemxWMmJ6X0NLQnNrUWFsMGhfVVVFaFdqbnoyVzNoWUFZVl9USlQwUXVwVXhpVy1lZnlLREdDdDMtSkFjX0ppMnBPZjVpZnc1T2hJOXNoQ08xWkthTDkyM0hDbzFBdHpQN0hVTElQOVJPbTBWNjRlTzl6MHVqTzQxejVIdVBDN2ptOUtjRHJ5U0d0RzRWbW45NElZeXVDd1VOb3JIYkR1VDBOZjFvVDJxdXJaOERSRHhfaEhkZ29tN0EtT3p6TFpHNE82clVkRG5OaGU5b2txMGg2dEhIMDJ6OFBfUV9Oc05ERWhqQmVKcl9yanhJdmpCZkNiYUxud0VDMEdUQUp6TGRVTEpoekVTdHhfRW1WVmFNNkNlUFc1RUowaTVkVWZ5Q044WFByTjNEcDlOc01FOU1vZTlrWWgtd1h4NnNQZUpQRnpjSHU3UURiTDAxZnBTYmVSOFhsLXc2WFVIcEU0TXE1MlhRb003WjJMMERzOXk1TlpwZ2dVTzN4ZjgxLUR6ZzBCa1g1N2NHRzJCNl9BQW13cE5NTldFcTVsSGxuRENjdzNjdUFpaGl1al9uTnozN2tpSjctOGtFNFk5anVOTTEtT0tkWVdERXBsaUExNnFTS3ZxaXdORGFkUEhlRzIzcUdob245NTdDeDlKM0ZFS1o5V0R4N2pBQl9sZjI1c2NPT08wZmZKNnh4UEdHeWs1M2xTZHhGSVNuenhWYmphTllwYlVUUkNmUzZMM3FadmdzN2JPelZuOEhfRGxGaTZxZi0xbklFdGtma1N0eE9oS1g1Ri1jU0FZb0VoWmM2TkJOT2lsenJfSkREVjJPSi14dXR0RjlDWV9yS2RCRFpodVdLcDdhaE1RTU4xZ0hSbTdndWRwYzE3Wi14cmZ3NTduSjZ1ODM4aWtSMGFWYVJzZTk2WW04cmlSVmc2UWZTOU9LRXR1S2EyNUhPOHdTLUtPYmk1WWM5RUVrMy11bEFJVm9sMjRlcW1makh1NjdNZm1QV09DTlJMWnM1TzQ3RmF1OFJaaS1NSlM0b1RSdDJzblhCYXVzd3JqajVwZXFKZ3ZFck5NWU90Ui03NUk4NGtxM2Y1c1RtYnJENF9SNXJuLUdYZG1TRWwxRjRlb09HTTlncnVVdG12STlMOHF3d25LM0JtV253a1c1ZFk2ejJYX3d3QjA1NUYtSGJwRG82U1JyamZmSDVQYndXMmdFZ21tZTdrOWVNUlp1VjViREI2eUlUR2JBRmgwU3VRanJOTmw3TlhVQUdwWldPUFBJZDJUVDVaUW9iY3ZnNy04V2kwb0tuN01HOE5QdFVMd1R1d0ZqbGdaNTNRZU9FR3pvNmhsU0Q0dFFoTW45MWU4cThJeTBHUF9hcWxaUDZtRjF1ZHA4TXY2bFFIeHlVdFFjOEIzYndCaEhEQWg5YzVZYzNaNGM0VFRwVWxXdTlDejlxdFB0LXFOcm9IVjJOQVZENVhmSVh0WmU4U3EtVXI2d0ZJTWhPSFhTS0dYOXUxY1RkdmpWNEcxUkZRVG1na2Zvb2VqcHpnY01QakhyX2xDWUVPRmlDX2ZWeGlHQ1BmUDNqbmhHWjlibmIzanhhV1I1NWk1SzhXVGtTVVFpUGdOaWJfY2ozTHhtaDV6SWFpZnVDX0RVMlhGODRvWUpLUmVaRjVzOE43Q09sUW5KcUVvMFFoSE5TSHVDdno0UmlNRG11c0t5QmVES1dEdG94SmktVElHNml3S0NyekJSX25oMFFDMHUzaVhHWE1ETWJ0VkQ0N3FaTVpwWWZIdmpEUWMxbTFuLTFwWVQxSTRfM0NUWERlM2VNTVdwNnhqQ2hNT0FfYXU5cUd1OUlCcFpQNG4wNkdWTDNvbjhQcEVtaVQzZ0U3UjdvdGUwWGpIZVFYanROTlVSdXI5MVdxb1JRT1BzMUctMnpjSGVKVGxGRjM4RDRHb0tLSUlfbTlTQjlzaEluZWlDWlNCSWlEOEtHMUs4WG1HRUxEMTQ1TkRGNXV2UkJwV0d5NEpLRktGQWU1WlZEXy1uRGZJNmhlVkdnSW9vWGFlNHNhdjFGZDlscFRSYVlVd0dFaU1QMGNuNFpCeUREdUVDQ0hSRFljQjlkT0p3WHZYRkpuZ21lVEZFZGx1NlBCZ3U4LUdtTzJhYld1dGJvdEhyV2UzZ08wNGpHR3AwOF9rWEtGYkdKN3BBTTQxaWNYbXJxYmMtUmhYZFFxRi1ZWXRTbFNLWEx4M1NNYmM5R1ktTXNnOV9mcWxhcVhod2dfZXhUa0xyNkpCZnBrMHlCTEtsY2xCT0R3YnRURzMzQkRCcl9SbFk0Mm1fVExHbDNPcVBNTmRHRFlDVWZlN2RtWVlUc1JZaDRNWmR2MXQtbDE2UFIzcWJpc05nZUdpZEN4QXZQUjR4WDdkSmhEcVpWUDJJbTBVTFY5QWgyUEJHb2RRSWt2Z09HV09LNmdzRjFXQzE0MFlCTEIzYVhvVmc4QnFUenAwOUNycWRKNlpjLWQyTFEzOG5tZXpVRmxQaHg4NllCem5TSVctWjZ0MnB4Z1otaEM2aTliRGFQYk9XVE1seEl5Nk84aE1TQWFnNHhCOWkyQmp5UnotNXdWNU5lOWhMdkR4UEdvWE5fOWtPS3MzYWI2dnBvdVFKUVYteDAtS2ZYVDJRN0NJZm9MRlluRDFLSGQtblk1U2Uxa3JrbzlReWxWbkVyeXhSUzZsS2pRNU95aU83bEppbF9Qc2R3Y2FvR09DNDRsVXhfdHFyUS1CYmYzT0pFUEpKSllzUE5PVFZpZlR0bU1uVnE5Z3FuYWZzZzc5Wk1iaDM4cnNoTjI2RFN6a2V6OEIwOUdyaG4xdXVFd3RIY09jVUZXVlNxeWlXc3RHV3VueW9xalZSQk1peXNrNS1WUEdUVW5hNUhNYjctZm00YXQ0bXZ6TlhJLUJrSXhlTTV0blJzYkx5ckVaaEIzRHZFeV9GODFTWVNnQWxZRXN3MHhRTmhxLUhSNjQ5TEhpX0RHVkFYaUNzZWZBZkwtWFRaR1Nka21FQ21ma3RTUlh1N0VBSFlwMzh6VFBKdkJ5UXd1UXdzbGtneklKNHQ1bHUxOVJvajhzUzBNa1lmdTNhMi1xUmtGTnhyWm9WWVJyZGxESnlSVWR1ek5kV1dzenFwM0t3dXpQN2g0RHF5Q1Jzbk42UFJUUnRWRC1hR0p3ODFVX3daMlpIQ3FfaHptSmJpc2hGVkFVamt1TkNGU2RiQ2VXMExGNHg3Q1lWUHJoSFc1U0ZkRDNybFY2OVA3WlM4YXV6UGxGV0tUUjlxT2ZpMDNiaWE1ZFVTS0I0dEI1NXVHTTJ4alRwcExWU0dTVUFncC1HTFF1WGticXlmQmFUdE5sbExjREE5TFNzWjBPM2pnRFR2REJ2NTk0UXlZeUYtckVhU3FDVlVTWGQyVVBUejBxUUY4dXNBYnhHT2NLRFV6VW1mWVRSWE4yM3RFMTVSOUN1Z19iSHA3MEFKLUJyN1pORmhWcWdXejJfdGlXMjVtTXNiSXdPc3dCdFo1ZHF4elc3SlJ4V2MwX1hoLTVSWHdRSm1oR0dFYXQ2M2FraEJEUVVzVkhQUVZ1bU9idjg5RFlBR0o2NlVlWkVMYWRmNzZZTG9sZk4tUWRvdmhMR0ZqMUl6cVpaZVB2eXpteHplelY2X09sUXpXb2FVRjl2SmU4LUZMY0Nac25kNzR6eGNlR20xSGh0dTVmUzF0MWwwYlRyLXhGQVFMV0dveVc5Rkg5YzM2VXp0NlAyZGlxRC1TV3dhaGZ3dUxMLVFmbzdUN2pkMnJhT0xLT2ZHaF9xTFpaWk96aXk3SjYwRWUzTGFJMzd2Y0RtN3Y5QlV6TEtpMlRNcDhqV3ozM3gzb1ZyVGlwVGJQd3dDOTZTbGhMdkp2eTA4Xy1tOTFKVWpFb2h5WXQtU0M4c25US3BNR19vcTdyMEx2NzJELXY2SVNNejhEelFBUzIybG0ySmpPa2dEY1JLY2FUQTh5QUlxdThMUkhvQ3poak1HTUkzdWs1eklUMDdXQmI1aWdfb3lYSWU5WFUwVXNOLU9zUk4xdGJCOFpzbWtQQ2RHaExDSDQtNVRSaU4wTy1TRndVYldaWGplbDdkNkpsZzk4anUydmJ1TzZLT3NXcy1obThPVDJaZHlOUHpMY05YdlZKcFJreXN0aHBlRW9SRUo2UVpqMnBRcjNkdXdtNXFCM01aeFYwTnhkMWhsOUlDMHJMUVdQTTV2UVkxV2E3d0F2d25vNi1EQVZGTUxvYzRCMk95WE1RR0I0ektjbURzbXBYU1hkT0ZZdFFfdkRBMmtPWHgxQlhqNTdxSVM3VjNHWFlzSzVtQXBjdFpIZVd6d0wyNFl2R2xZYV9fTFNGcldQdTQ4a3pXOTdnSV9qX3VmbkNMVXJVTmNVWGllbUJueHlLRDNqZmg1RDVILUxqUlZkNFNGcF9jMktoLTl1QUNLSnB4MTNJYVhWU29lRXJKdnkwYW5nVG5BOUwzUHVFS3FiSF94T21GMWFOSjF4RU4wTTh4LTFJQWhZWXBuMGI5RDRPSFMyRzJFNjgwWEFhcUd5UFRPaG5Ibml3RHhYTnJVNFl4d3QzTzFxUU1zSHNuOFFqR0oxOVN5TXhnbEtBZl9GdUZfRGU4NllrLTNieFE5MUtjWGJoQ2xQQW4yZ1M4cXc3M1ZldFJCbXhPY1EySmY1U3NqQ2ZnOElSSHlUd3JXYlBSbTQta19VQmlwXzdjNk11ZjlBTFozSm5ZczJDN0lUd3dwSTJHS1JHNE9SS3JqenZBbEJoVVRxNmIzQ1lXZGxfOFNHMlNfTk84UXJlRFZVT2lEVlVtTTJ6VmsySmZldkFSbGt0U19ENDYyc2xqdWp0UVc3S0J5RnVjeTNZWm9KLUlOOHJ4R2ZrVHVoV3Y1eVRsTnlZcVcwczE2SzBNa05KOWVjc2NJWUpLM0ROU1NGWF9sVkVuSkU1dWhDZXkzU3FtLTZIT08xZ3RlQi1VbmlKYjJVdXl5TUN3RmhmbTU1NzBnalV0ZkI3akVLWUxFeVR4TFVBSnJ6al9LdVdJbTlnenhQbHBRMGlDMkFiOWd0MzVyUlRtaTEwYjJQWFJGR0FVSTVhLXBvQXB1WW53SEdrQUxhUm9wRVlyLTB1ekhrQ2dZM0xwZ1EtcFNTbWF2NlQ0TnQ1bTlDQlJIeFNONlkwMTV0b3RneEV3TExDN1RaSFNRVzI3cGtTbHFwd1E1MGx5a1BKMkJ6X0lzM2dPaW1QVXF4V0ZoNGFDWW1KYmRsalo1Z2QzU21NUWtRNnZTRmVpSmhPM1lIbVpvTFFLakxhYXJVTnE4a1RyRWZKb1NZNmV3X0ZmLXFCVUYxTGh4akZScGpNU3BNc1BFRHR1MkJDVjdZeFVseHBEMjZRWnplWjZhVzhCd3huRlZ2eWNkMGpHYXR6eHZIbE1Yc0hiZFZpS045T21lTWFUOTB6WGYzaUIzbUhzQkd3cWZvOWhDR0tCb1lEU1IwNjNBVHZwRDUzMkltTTZka2czUGtiTzltLVE5NXhqOUpyTjI2YlQ1N0FBPT0=)
        FCI_CERTIFICATE_PASSWORD: Encrypted(Z0FBQUFBQmdzdTI0WkV3clp0dG4tWXFHbzlnTmVkWkVXMFZrTUMzenp4Zkh5NmpmeUZ0T2hSMWVnZTJJNndwZ1p6ZGVBRXNtMmY1OHlpTURWRVlrV3ZrcXhfeUVEZmhENmc9PQ==)
        FCI_PROVISIONING_PROFILE: Encrypted()
      node: latest
      xcode: latest
      cocoapods: default

    scripts:
      - name: Install npm dependencies
        script: |
                    npm install
      - name: Install CocoaPods dependencies
        script: |
                    cd ios && pod install
      - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
        script: |
                    keychain initialize
      - name: Set up Provisioning profiles from environment variables
        script: |
                    PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
                    mkdir -p "$PROFILES_HOME"
                    PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
                    echo ${FCI_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
                    echo "Saved provisioning profile $PROFILE_PATH"      
      - name: Set up signing certificate
        script: |
                    echo $FCI_CERTIFICATE | base64 --decode > /tmp/certificate.p12
                    if [ -z ${FCI_CERTIFICATE_PASSWORD+x} ]; then
                      # when using a certificate that is not password-protected
                      keychain add-certificates --certificate /tmp/certificate.p12
                    else
                      # when using a password-protected certificate
                      keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $FCI_CERTIFICATE_PASSWORD
                    fi      
      - name: Set up code signing settings on Xcode project
        script: |
                    xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
                    xcode-project build-ipa --project "$FCI_BUILD_DIR/ios/Wallet.xcodeproj" --scheme "Wallet" 

    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM

    publishing:
      # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
      email:
        recipients:
          - codemagic@stayradiated.com
        notify:
          success: true
          failure: false
